import requests
response  = requests.get('http://localhost:8080/')
response  = requests.get('http://localhost:8080/dsfdsf')
response  = requests.get('http://localhost:80/dsfdsf')
response
exit()
import requests
requests.get('http://localhost:80/adfadf').text
requests.get('http://localhost:8080/adfadf')
requests.get('http://localhost:80/adfadf')
exit()
import requests
requests.get('http://localhost:8080')
exit()
import requests
requests.get('unix:gateway.sock')
requests.get('unix:gateway.sock/aldfnlkdanfk')
requests.get('http://localhost:959/aldfnlkdanfk')
requests.get('http://localhost:8080/aldfnlkdanfk')
requests.get('http://localhost:8080/aldfnlkdanfk').text
import requests
response = requests.get('http://localhost:8080/dakfnldaknflad')
response = requests.get('http://localhost:8080/de4akfnldaknflad')
response
exit()
import requests
requests.get('http://localhost:8080/').text
requests.get('http://localhost:8080/')
requests.get('http://localhost:8080/').status
response = requests.get('http://localhost:8080/')
response.status_code
response = requests.get('http://localhost:8080/')
response = requests.post('http://localhost:8100/')
response = requests.post('http://localhost:8100/', json={'uhgjbnmk単oiuygh'})
response = requests.post('http://localhost:8100/', json='uhgjbnmk単oiuygh')
response = requests.post('http://localhost:80/', json='uhgjbnmk単oiuygh')
response
response.text
response = requests.post('http://localhost:8100/', json='uhgjbnmk単oiuygh')
import requests
requests.post('http://localhost:8000').text
requests.post('http://localhost:80').text
requests.post('http://localhost:80')
requests.post('http://localhost:80').text
import requests
requests.post('http://localhost:8000').text
exit()
import requests
requests.post('http://localhost:9000', json="509859be4b0e2327819aa33f2cdf6b628c82dd6b48ff202e2e1649e241114c84").text
SHAKE = lambda value: "" if value is None else hashlib.shake_256(value.encode()).hexdigest(256)
import hashlib
SHAKE('hola')
SHAKE = lambda value: "" if value is None else hashlib.shake_256(value.encode()).hexdigest(64)
SHAKE('hola')
SHAKE = lambda value: "" if value is None else hashlib.shake_256(value.encode()).hexdigest(32)
SHAKE('hola')
exit()
