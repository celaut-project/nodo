syntax = "proto3";
package gateway;
import "ipss.proto";

message Token {
    oneof oneOf {
        int32 value_int32 = 1;
        int64 value_int64 = 2;
        string value_string = 3;
    }   
}

message Empty {}

message Instance {
    ipss.Instance instance = 1;
    Token token = 2;
}

message ServiceTransport {
    oneof oneOf{
        string hash = 1;
        ipss.Service service = 2;
    }
    optional ipss.Configuration config = 3;
}

message Chunk  {
    bytes buffer = 1;
}

service Gateway {
    rpc StartService( stream ServiceTransport) returns (Instance) {}
    rpc StopService(Token) returns (Empty) {}
    rpc Hynode(ipss.Instance) returns (ipss.Instance) {}
    
    rpc GetServiceTar(stream ServiceTransport) returns (stream Chunk) {}
    rpc GetServiceDef(stream ServiceTransport) returns (ipss.Service) {}
}