syntax = "proto3";

import "ipss.proto";

message Token {
    oneof oneOf {
        int32 value_int32 = 1;
        int64 value_int64 = 2;
        string value_string = 3;
    }   
}

message Empty {}

message Instance {
    map<int32, ipss.Gateway.Uri> uris = 1; // map like [ 8080 -> 192.17.0.4:6899, ]
    Token token = 2;
}

message ServiceExtended {
    oneof oneOf{
        ipss.Hash hash = 1;
        ipss.Service service = 2;
    }
    optional ipss.Configuration config = 3;
}

message ServiceFile {
    repeated ipss.Hash multihash = 1;
    ipss.Service service = 2;
}

service Gateway {
    rpc StartService(stream ServiceExtended) returns (Instance) {}
    rpc StopService(Token) returns (Empty) {}
}